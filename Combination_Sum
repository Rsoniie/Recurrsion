********USING RECURSSIONG TC = 2^TARGET*******
void sum(int ind, int tar, vector<int>&arr,vector<int>&ds, vector<vector<int>>&ans)
{
    if(ind == arr.size())
    {
        if(tar == 0)
        {
            ans.push_back(ds);
        }

        return ;
    }

    if(arr[ind] <= tar)
    {
        ds.push_back(arr[ind]);
        sum(ind, tar-arr[ind], arr, ds, ans);
        ds.pop_back();
    }
    sum(ind+1, tar, arr, ds, ans);
}
vector<vector<int>> combSum(vector<int> &arr, int tar)
{
    set<int> st;
    for(auto i:arr)
    {
        st.insert(i);
    }
    arr.clear();
    for(auto i:st)
    {
        arr.push_back(i);
    }
    vector<vector<int>> ans;
    vector<int> ds;
    sum(0, tar, arr, ds, ans);
    return ans;
    
}
